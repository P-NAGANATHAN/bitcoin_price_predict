version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./app:/app
    environment:
      - INIT_DAEMON_STEP=setup_spark

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,INTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, INTERNAL://kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "bitcoin_data_stream:1:1"
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  bitcoin-simulator:
    image: python:3.9
    container_name: bitcoin-simulator
    depends_on:
      - kafka
    volumes:
      - ./app:/app
    working_dir: /app
    command: /bin/bash -c "pip install -r requirements.txt && python bitcoin_simulator.py"
    environment:
      - PYTHONUNBUFFERED=1

  postgres:
    image: postgres:12
    container_name: postgres
    environment:
      POSTGRES_USER: bitcoin_usr
      POSTGRES_PASSWORD: bitcoin_pwd
      POSTGRES_DB: bitcoin
    ports:
      - "5432:5432"

  spark-job:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-job
    depends_on:
      - kafka
      - spark-master
    volumes:
      - ./app:/app
    command: /bin/bash -c "/spark/bin/spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.0,org.apache.spark:spark-hive_2.12:3.3.0,org.postgresql:postgresql:42.2.18 /app/app.py"
    environment:
      - PYSPARK_PYTHON=python3
      - PYTHONUNBUFFERED=1

  bitcoin-predictor:
    image: python:3.9
    container_name: bitcoin-predictor
    depends_on:
      - kafka
    volumes:
      - ./app:/app
    working_dir: /app
    command: /bin/bash -c "pip install -r model.txt && python bitcoin_predictor.py"
    environment:
      - PYTHONUNBUFFERED=1

  frontend:
    image: python:3.9
    container_name: flask
    working_dir: /app
    ports:
      - "5000:5000" 
    volumes:
      - ./frontend:/app  
    environment:
      - FLASK_ENV=development
      - FLASK_APP=main.py
      - PYTHONUNBUFFERED=1  
    command: bash -c "pip install -r requirements.txt && flask run --host=0.0.0.0"

  superset:
    image: apache/superset
    container_name: superset
    environment:
      SUPERSET_LOAD_EXAMPLES: "no"
      SUPERSET_SECRET_KEY: "a_random_secret_key"
      POSTGRES_USER: bitcoin_usr
      POSTGRES_PASSWORD: bitcoin_pwd
      POSTGRES_DB: bitcoin
      POSTGRES_HOST: postgres
      SUPERSET_CONFIG_PATH: /app/pythonpath/superset_config.py
    ports:
      - "8088:8088"
    volumes:
      - ./superset_home:/app/superset_home
      - ./superset_config.py:/app/pythonpath/superset_config.py
    depends_on:
      - postgres

volumes:
  hadoop_namenode:
  hadoop_datanode:
